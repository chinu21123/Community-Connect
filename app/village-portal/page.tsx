"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import Link from "next/link"

const translations = {
  en: {
    title: "üåê Village Portal",
    backToHome: "‚Üê Back to Home",
    businessDirectory: "Business Directory",
    jobPortal: "Job Portal",
    eventCalendar: "Event Calendar",
    newsUpdates: "News & Updates",
    emergencyServices: "Emergency Services",
    onlineServices: "Online Services",
    villageMap: "Village Map",
    contactDirectory: "Contact Directory",
    // Business Directory
    localBusinesses: "Local Businesses",
    shopOwners: "Shop Owners",
    serviceProviders: "Service Providers",
    viewContact: "View Contact",
    openNow: "Open Now",
    closed: "Closed",
    // Job Portal
    availableJobs: "Available Jobs",
    skillTraining: "Skill Training",
    postJob: "Post Job",
    applyNow: "Apply Now",
    experience: "Experience",
    salary: "Salary",
    // Events
    upcomingEvents: "Upcoming Events",
    registerEvent: "Register for Event",
    eventDetails: "Event Details",
    // Emergency
    police: "Police",
    hospital: "Hospital",
    fireService: "Fire Service",
    ambulance: "Ambulance",
    call: "Call",
  },
  hi: {
    title: "üåê ‡§ó‡§æ‡§Ç‡§µ ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤",
    backToHome: "‚Üê ‡§µ‡§æ‡§™‡§∏ ‡§π‡•ã‡§Æ ‡§™‡•á‡§ú ‡§™‡§∞",
    businessDirectory: "‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡§ø‡§ï‡§æ",
    jobPortal: "‡§®‡•å‡§ï‡§∞‡•Ä ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤",
    eventCalendar: "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞",
    newsUpdates: "‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞ ‡§î‡§∞ ‡§Ö‡§™‡§°‡•á‡§ü",
    emergencyServices: "‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç",
    onlineServices: "‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç",
    villageMap: "‡§ó‡§æ‡§Ç‡§µ ‡§ï‡§æ ‡§®‡§ï‡•ç‡§∂‡§æ",
    contactDirectory: "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡§ø‡§ï‡§æ",
    // Business Directory
    localBusinesses: "‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞",
    shopOwners: "‡§¶‡•Å‡§ï‡§æ‡§® ‡§Æ‡§æ‡§≤‡§ø‡§ï",
    serviceProviders: "‡§∏‡•á‡§µ‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§§‡§æ",
    viewContact: "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§¶‡•á‡§ñ‡•á‡§Ç",
    openNow: "‡§Ö‡§≠‡•Ä ‡§ñ‡•Å‡§≤‡§æ",
    closed: "‡§¨‡§Ç‡§¶",
    // Job Portal
    availableJobs: "‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡•å‡§ï‡§∞‡§ø‡§Ø‡§æ‡§Ç",
    skillTraining: "‡§ï‡•å‡§∂‡§≤ ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£",
    postJob: "‡§®‡•å‡§ï‡§∞‡•Ä ‡§™‡•ã‡§∏‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç",
    applyNow: "‡§Ö‡§≠‡•Ä ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡§∞‡•á‡§Ç",
    experience: "‡§Ö‡§®‡•Å‡§≠‡§µ",
    salary: "‡§µ‡•á‡§§‡§®",
    // Events
    upcomingEvents: "‡§Ü‡§ó‡§æ‡§Æ‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ",
    registerEvent: "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£",
    eventDetails: "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§µ‡§ø‡§µ‡§∞‡§£",
    // Emergency
    police: "‡§™‡•Å‡§≤‡§ø‡§∏",
    hospital: "‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤",
    fireService: "‡§Ö‡§ó‡•ç‡§®‡§ø‡§∂‡§Æ‡§® ‡§∏‡•á‡§µ‡§æ",
    ambulance: "‡§è‡§Æ‡•ç‡§¨‡•Å‡§≤‡•á‡§Ç‡§∏",
    call: "‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç",
  },
}

const businessData = [
  {
    id: 1,
    name: "Sharma General Store",
    nameHi: "‡§∂‡§∞‡•ç‡§Æ‡§æ ‡§ú‡§®‡§∞‡§≤ ‡§∏‡•ç‡§ü‡•ã‡§∞",
    category: "Grocery",
    categoryHi: "‡§ï‡§ø‡§∞‡§æ‡§®‡§æ",
    owner: "Ramesh Sharma",
    ownerHi: "‡§∞‡§Æ‡•á‡§∂ ‡§∂‡§∞‡•ç‡§Æ‡§æ",
    phone: "+91 9876543210",
    address: "Main Market, Utrana",
    addressHi: "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§¨‡§æ‡§ú‡§æ‡§∞, ‡§â‡§§‡§∞‡§æ‡§®‡§æ",
    timing: "6:00 AM - 10:00 PM",
    status: "open",
  },
  {
    id: 2,
    name: "Patel Medical Store",
    nameHi: "‡§™‡§ü‡•á‡§≤ ‡§Æ‡•á‡§°‡§ø‡§ï‡§≤ ‡§∏‡•ç‡§ü‡•ã‡§∞",
    category: "Pharmacy",
    categoryHi: "‡§¶‡§µ‡§æ‡§ñ‡§æ‡§®‡§æ",
    owner: "Dr. Suresh Patel",
    ownerHi: "‡§°‡•â. ‡§∏‡•Å‡§∞‡•á‡§∂ ‡§™‡§ü‡•á‡§≤",
    phone: "+91 9876543211",
    address: "Near Health Center",
    addressHi: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞ ‡§ï‡•á ‡§™‡§æ‡§∏",
    timing: "8:00 AM - 9:00 PM",
    status: "open",
  },
  {
    id: 3,
    name: "Kumar Electronics",
    nameHi: "‡§ï‡•Å‡§Æ‡§æ‡§∞ ‡§á‡§≤‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡•â‡§®‡§ø‡§ï‡•ç‡§∏",
    category: "Electronics",
    categoryHi: "‡§á‡§≤‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡•â‡§®‡§ø‡§ï‡•ç‡§∏",
    owner: "Vijay Kumar",
    ownerHi: "‡§µ‡§ø‡§ú‡§Ø ‡§ï‡•Å‡§Æ‡§æ‡§∞",
    phone: "+91 9876543212",
    address: "Bus Stand Road",
    addressHi: "‡§¨‡§∏ ‡§∏‡•ç‡§ü‡•à‡§Ç‡§° ‡§∞‡•ã‡§°",
    timing: "9:00 AM - 8:00 PM",
    status: "closed",
  },
]

const jobData = [
  {
    id: 1,
    title: "Computer Operator",
    titleHi: "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§ë‡§™‡§∞‡•á‡§ü‡§∞",
    company: "Panchayat Office",
    companyHi: "‡§™‡§Ç‡§ö‡§æ‡§Ø‡§§ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§≤‡§Ø",
    location: "Utrana",
    locationHi: "‡§â‡§§‡§∞‡§æ‡§®‡§æ",
    salary: "‚Çπ15,000 - ‚Çπ20,000",
    experience: "1-2 years",
    experienceHi: "1-2 ‡§∏‡§æ‡§≤",
    type: "Full Time",
    typeHi: "‡§™‡•Ç‡§∞‡•ç‡§£‡§ï‡§æ‡§≤‡§ø‡§ï",
    posted: "2 days ago",
    postedHi: "2 ‡§¶‡§ø‡§® ‡§™‡§π‡§≤‡•á",
  },
  {
    id: 2,
    title: "Agriculture Assistant",
    titleHi: "‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï",
    company: "Agriculture Department",
    companyHi: "‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§≠‡§æ‡§ó",
    location: "Bundi District",
    locationHi: "‡§¨‡•Ç‡§®‡•ç‡§¶‡•Ä ‡§ú‡§ø‡§≤‡§æ",
    salary: "‚Çπ18,000 - ‚Çπ25,000",
    experience: "0-1 years",
    experienceHi: "0-1 ‡§∏‡§æ‡§≤",
    type: "Government",
    typeHi: "‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä",
    posted: "5 days ago",
    postedHi: "5 ‡§¶‡§ø‡§® ‡§™‡§π‡§≤‡•á",
  },
  {
    id: 3,
    title: "Mobile Repair Technician",
    titleHi: "‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§∞‡§ø‡§™‡•á‡§Ø‡§∞ ‡§§‡§ï‡§®‡•Ä‡§∂‡§ø‡§Ø‡§®",
    company: "Tech Solutions",
    companyHi: "‡§ü‡•á‡§ï ‡§∏‡•â‡§≤‡•ç‡§Ø‡•Ç‡§∂‡§®‡•ç‡§∏",
    location: "Utrana",
    locationHi: "‡§â‡§§‡§∞‡§æ‡§®‡§æ",
    salary: "‚Çπ12,000 - ‚Çπ18,000",
    experience: "6 months",
    experienceHi: "6 ‡§Æ‡§π‡•Ä‡§®‡•á",
    type: "Part Time",
    typeHi: "‡§Ö‡§Ç‡§∂‡§ï‡§æ‡§≤‡§ø‡§ï",
    posted: "1 week ago",
    postedHi: "1 ‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§™‡§π‡§≤‡•á",
  },
]

const eventData = [
  {
    id: 1,
    title: "Health Checkup Camp",
    titleHi: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö ‡§∂‡§ø‡§µ‡§ø‡§∞",
    date: "2025-01-25",
    time: "9:00 AM - 4:00 PM",
    venue: "Primary Health Center",
    venueHi: "‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞",
    description: "Free health checkup for all villagers",
    descriptionHi: "‡§∏‡§≠‡•Ä ‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§É‡§∂‡•Å‡§≤‡•ç‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö",
    organizer: "Health Department",
    organizerHi: "‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§µ‡§ø‡§≠‡§æ‡§ó",
  },
  {
    id: 2,
    title: "Skill Development Workshop",
    titleHi: "‡§ï‡•å‡§∂‡§≤ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§∂‡§æ‡§≤‡§æ",
    date: "2025-02-01",
    time: "10:00 AM - 5:00 PM",
    venue: "Community Hall",
    venueHi: "‡§∏‡§æ‡§Æ‡•Å‡§¶‡§æ‡§Ø‡§ø‡§ï ‡§π‡•â‡§≤",
    description: "Computer and digital literacy training",
    descriptionHi: "‡§ï‡§Ç‡§™‡•ç‡§Ø‡•Ç‡§ü‡§∞ ‡§î‡§∞ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡§æ‡§ï‡•ç‡§∑‡§∞‡§§‡§æ ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£",
    organizer: "Education Committee",
    organizerHi: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∏‡§Æ‡§ø‡§§‡§ø",
  },
  {
    id: 3,
    title: "Farmers' Meeting",
    titleHi: "‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡§≠‡§æ",
    date: "2025-02-05",
    time: "6:00 PM - 8:00 PM",
    venue: "Village Chaupal",
    venueHi: "‡§ó‡§æ‡§Ç‡§µ ‡§ö‡•å‡§™‡§æ‡§≤",
    description: "Discussion on new agricultural schemes",
    descriptionHi: "‡§®‡§à ‡§ï‡•É‡§∑‡§ø ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§™‡§∞ ‡§ö‡§∞‡•ç‡§ö‡§æ",
    organizer: "Farmers Association",
    organizerHi: "‡§ï‡§ø‡§∏‡§æ‡§® ‡§∏‡§Ç‡§ò",
  },
]

const emergencyContacts = [
  { service: "Police", serviceHi: "‡§™‡•Å‡§≤‡§ø‡§∏", number: "100", local: "+91 9876543220", icon: "üöî" },
  { service: "Hospital", serviceHi: "‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤", number: "108", local: "+91 9876543221", icon: "üè•" },
  { service: "Fire Service", serviceHi: "‡§Ö‡§ó‡•ç‡§®‡§ø‡§∂‡§Æ‡§® ‡§∏‡•á‡§µ‡§æ", number: "101", local: "+91 9876543222", icon: "üöí" },
  { service: "Ambulance", serviceHi: "‡§è‡§Æ‡•ç‡§¨‡•Å‡§≤‡•á‡§Ç‡§∏", number: "108", local: "+91 9876543223", icon: "üöë" },
]

export default function VillagePortalPage() {
  const [language, setLanguage] = useState<"en" | "hi">("hi")
  const t = translations[language]

  const getStatusColor = (status: string) => {
    return status === "open" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"
  }

  const getJobTypeColor = (type: string) => {
    const colors = {
      "Full Time": "bg-blue-100 text-blue-800",
      "Part Time": "bg-yellow-100 text-yellow-800",
      Government: "bg-green-100 text-green-800",
      ‡§™‡•Ç‡§∞‡•ç‡§£‡§ï‡§æ‡§≤‡§ø‡§ï: "bg-blue-100 text-blue-800",
      ‡§Ö‡§Ç‡§∂‡§ï‡§æ‡§≤‡§ø‡§ï: "bg-yellow-100 text-yellow-800",
      ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä: "bg-green-100 text-green-800",
    }
    return colors[type as keyof typeof colors] || "bg-gray-100 text-gray-800"
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-100 via-gray-50 to-zinc-100 relative overflow-hidden">
      {/* Animated Background */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute top-20 left-10 w-32 h-32 bg-blue-300 rounded-full opacity-20 animate-pulse"></div>
        <div className="absolute top-40 right-20 w-24 h-24 bg-green-300 rounded-full opacity-30 animate-bounce"></div>
        <div className="absolute bottom-32 left-1/4 w-40 h-40 bg-purple-300 rounded-full opacity-15 animate-pulse"></div>
        <div className="absolute bottom-20 right-1/3 w-28 h-28 bg-orange-300 rounded-full opacity-25 animate-bounce"></div>
      </div>

      <div className="max-w-7xl mx-auto p-4 relative z-10">
        {/* Header */}
        <div className="flex justify-between items-center mb-8">
          <Link href="/" className="text-slate-600 hover:text-slate-800 font-medium text-lg">
            {t.backToHome}
          </Link>
          <div className="bg-white rounded-full p-1 shadow-md border border-slate-200">
            <Button
              variant={language === "hi" ? "default" : "ghost"}
              size="sm"
              onClick={() => setLanguage("hi")}
              className={`rounded-full px-3 py-1 text-sm font-medium transition-all ${
                language === "hi" ? "bg-slate-600 text-white shadow-sm" : "text-slate-600 hover:bg-slate-50"
              }`}
            >
              ‡§π‡§ø‡§Ç‡§¶‡•Ä
            </Button>
            <Button
              variant={language === "en" ? "default" : "ghost"}
              size="sm"
              onClick={() => setLanguage("en")}
              className={`rounded-full px-3 py-1 text-sm font-medium transition-all ${
                language === "en" ? "bg-slate-600 text-white shadow-sm" : "text-slate-600 hover:bg-slate-50"
              }`}
            >
              English
            </Button>
          </div>
        </div>

        {/* Main Title */}
        <div className="text-center mb-12">
          <h1 className="text-4xl font-bold text-slate-800 mb-4">{t.title}</h1>
          <p className="text-slate-600 text-lg">
            {language === "hi" ? "‡§Ü‡§™‡§ï‡•á ‡§ó‡§æ‡§Ç‡§µ ‡§ï‡•Ä ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§°‡§ø‡§ú‡§ø‡§ü‡§≤ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç" : "Complete digital services for your village"}
          </p>
        </div>

        <Tabs defaultValue="business" className="w-full">
          <TabsList className="grid w-full grid-cols-4 lg:grid-cols-8 mb-8">
            <TabsTrigger value="business" className="text-xs">
              üè™ {language === "hi" ? "‡§µ‡•ç‡§Ø‡§æ‡§™‡§æ‡§∞" : "Business"}
            </TabsTrigger>
            <TabsTrigger value="jobs" className="text-xs">
              üíº {language === "hi" ? "‡§®‡•å‡§ï‡§∞‡•Ä" : "Jobs"}
            </TabsTrigger>
            <TabsTrigger value="events" className="text-xs">
              üìÖ {language === "hi" ? "‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ" : "Events"}
            </TabsTrigger>
            <TabsTrigger value="emergency" className="text-xs">
              üö® {language === "hi" ? "‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤" : "Emergency"}
            </TabsTrigger>
            <TabsTrigger value="services" className="text-xs">
              üõ†Ô∏è {language === "hi" ? "‡§∏‡•á‡§µ‡§æ‡§è‡§Ç" : "Services"}
            </TabsTrigger>
            <TabsTrigger value="map" className="text-xs">
              üó∫Ô∏è {language === "hi" ? "‡§®‡§ï‡•ç‡§∂‡§æ" : "Map"}
            </TabsTrigger>
            <TabsTrigger value="news" className="text-xs">
              üì∞ {language === "hi" ? "‡§∏‡§Æ‡§æ‡§ö‡§æ‡§∞" : "News"}
            </TabsTrigger>
            <TabsTrigger value="contact" className="text-xs">
              üìû {language === "hi" ? "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï" : "Contact"}
            </TabsTrigger>
          </TabsList>

          {/* Business Directory Tab */}
          <TabsContent value="business">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {businessData.map((business) => (
                <Card key={business.id} className="border-blue-200 shadow-lg hover:shadow-xl transition-all">
                  <CardHeader>
                    <div className="flex justify-between items-start">
                      <div>
                        <CardTitle className="text-blue-800 text-lg">
                          {language === "hi" ? business.nameHi : business.name}
                        </CardTitle>
                        <p className="text-blue-600">{language === "hi" ? business.categoryHi : business.category}</p>
                      </div>
                      <Badge className={getStatusColor(business.status)}>
                        {business.status === "open" ? t.openNow : t.closed}
                      </Badge>
                    </div>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    <div>
                      <p className="text-sm text-blue-600">Owner:</p>
                      <p className="font-medium text-blue-800">
                        {language === "hi" ? business.ownerHi : business.owner}
                      </p>
                    </div>
                    <div>
                      <p className="text-sm text-blue-600">Address:</p>
                      <p className="font-medium text-blue-800">
                        {language === "hi" ? business.addressHi : business.address}
                      </p>
                    </div>
                    <div>
                      <p className="text-sm text-blue-600">Timing:</p>
                      <p className="font-medium text-blue-800">{business.timing}</p>
                    </div>
                    <Button className="w-full bg-blue-600 hover:bg-blue-700">üìû {t.viewContact}</Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* Job Portal Tab */}
          <TabsContent value="jobs">
            <div className="space-y-6">
              <div className="flex justify-between items-center">
                <h2 className="text-2xl font-bold text-slate-800">{t.availableJobs}</h2>
                <Button className="bg-green-600 hover:bg-green-700">+ {t.postJob}</Button>
              </div>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {jobData.map((job) => (
                  <Card key={job.id} className="border-green-200 shadow-lg">
                    <CardHeader>
                      <div className="flex justify-between items-start">
                        <div>
                          <CardTitle className="text-green-800 text-lg">
                            {language === "hi" ? job.titleHi : job.title}
                          </CardTitle>
                          <p className="text-green-600">{language === "hi" ? job.companyHi : job.company}</p>
                        </div>
                        <Badge className={getJobTypeColor(language === "hi" ? job.typeHi : job.type)}>
                          {language === "hi" ? job.typeHi : job.type}
                        </Badge>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <p className="text-sm text-green-600">{t.salary}:</p>
                          <p className="font-medium text-green-800">{job.salary}</p>
                        </div>
                        <div>
                          <p className="text-sm text-green-600">{t.experience}:</p>
                          <p className="font-medium text-green-800">
                            {language === "hi" ? job.experienceHi : job.experience}
                          </p>
                        </div>
                      </div>
                      <div>
                        <p className="text-sm text-green-600">Location:</p>
                        <p className="font-medium text-green-800">
                          {language === "hi" ? job.locationHi : job.location}
                        </p>
                      </div>
                      <div className="flex justify-between items-center">
                        <p className="text-sm text-green-500">{language === "hi" ? job.postedHi : job.posted}</p>
                        <Button className="bg-green-600 hover:bg-green-700">{t.applyNow}</Button>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </TabsContent>

          {/* Events Tab */}
          <TabsContent value="events">
            <div className="space-y-6">
              <h2 className="text-2xl font-bold text-slate-800">{t.upcomingEvents}</h2>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {eventData.map((event) => (
                  <Card key={event.id} className="border-purple-200 shadow-lg">
                    <CardHeader>
                      <CardTitle className="text-purple-800 text-lg">
                        {language === "hi" ? event.titleHi : event.title}
                      </CardTitle>
                      <div className="flex items-center space-x-4 text-sm text-purple-600">
                        <span>üìÖ {event.date}</span>
                        <span>üïí {event.time}</span>
                      </div>
                    </CardHeader>
                    <CardContent className="space-y-3">
                      <div>
                        <p className="text-sm text-purple-600">Venue:</p>
                        <p className="font-medium text-purple-800">{language === "hi" ? event.venueHi : event.venue}</p>
                      </div>
                      <div>
                        <p className="text-sm text-purple-600">Description:</p>
                        <p className="font-medium text-purple-800">
                          {language === "hi" ? event.descriptionHi : event.description}
                        </p>
                      </div>
                      <div>
                        <p className="text-sm text-purple-600">Organizer:</p>
                        <p className="font-medium text-purple-800">
                          {language === "hi" ? event.organizerHi : event.organizer}
                        </p>
                      </div>
                      <Button className="w-full bg-purple-600 hover:bg-purple-700">{t.registerEvent}</Button>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </TabsContent>

          {/* Emergency Services Tab */}
          <TabsContent value="emergency">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {emergencyContacts.map((contact, index) => (
                <Card key={index} className="border-red-200 shadow-lg bg-gradient-to-br from-red-50 to-pink-50">
                  <CardContent className="p-6 text-center">
                    <div className="text-6xl mb-4">{contact.icon}</div>
                    <h3 className="text-lg font-semibold text-red-800 mb-3">
                      {language === "hi" ? contact.serviceHi : contact.service}
                    </h3>
                    <div className="space-y-3">
                      <div className="bg-red-100 rounded-lg p-3">
                        <p className="text-red-800 font-bold text-xl">{contact.number}</p>
                        <p className="text-red-600 text-xs">{language === "hi" ? "‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø" : "National"}</p>
                      </div>
                      <div className="bg-red-50 rounded-lg p-3">
                        <p className="text-red-700 font-medium">{contact.local}</p>
                        <p className="text-red-600 text-xs">{language === "hi" ? "‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø" : "Local"}</p>
                      </div>
                      <Button className="w-full bg-red-600 hover:bg-red-700">üìû {t.call}</Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          {/* Other tabs can be added similarly */}
          <TabsContent value="services">
            <div className="text-center py-12">
              <h2 className="text-2xl font-bold text-slate-800 mb-4">{t.onlineServices}</h2>
              <p className="text-slate-600">Online services section coming soon...</p>
            </div>
          </TabsContent>

          <TabsContent value="map">
            <div className="text-center py-12">
              <h2 className="text-2xl font-bold text-slate-800 mb-4">{t.villageMap}</h2>
              <p className="text-slate-600">Interactive village map coming soon...</p>
            </div>
          </TabsContent>

          <TabsContent value="news">
            <div className="text-center py-12">
              <h2 className="text-2xl font-bold text-slate-800 mb-4">{t.newsUpdates}</h2>
              <p className="text-slate-600">Latest news and updates coming soon...</p>
            </div>
          </TabsContent>

          <TabsContent value="contact">
            <div className="text-center py-12">
              <h2 className="text-2xl font-bold text-slate-800 mb-4">{t.contactDirectory}</h2>
              <p className="text-slate-600">Complete contact directory coming soon...</p>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  )
}
